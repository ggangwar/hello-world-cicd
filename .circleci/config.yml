version: 2.1
orbs:
  welcome: circleci/welcome-orb@0.4.1
commands:
  print_pipeline_id:
    parameters:
      id:
        default: '123'
        type: string
    steps:
      - run: 'echo "<<parameters.id>>" ${CIRCLE_WORKFLOW_ID}'
jobs:
  print_hello_world:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - run: echo helloworld
  print_owner:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - run:
          name: printing project's owner
          command: |
            echo $owner
  save_hello_world_output:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - run: echo "Hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  print_pipeline_id_command:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
  handle_failure:
    docker:
      - image: 'circleci/node:13.8.0'
    steps:
      - run: return 0
      - run:
          name: on error
          command: |
            echo "something failed"
          when: on_fail
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file infra.yml \
              --stack-name cicd-demo-stack
  configure_infra:
    docker:
      - image: 'python:3.7-alpine3.11'
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '13:59:17:ea:a4:c6:3a:95:0e:25:22:6f:9a:2e:c9:18'
      - run:
          name: install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory playbook.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
            name: smoke test.
            command: |
              URL="https://blog.udacity.com/"
              if curl -s --head ${URL} # test if blog.udacity. com exists
              then
               return 0
              else
               return 1
              fi
workflows:
  welcome:
    jobs:
      - welcome/run
      #- print_hello_world
      #- print_owner
      #- save_hello_world_output
      #- print_output_file:
      #   requires:
      #     - save_hello_world_output
      #- print_pipeline_id_command
      #- create_infrastructure
      #- configure_infra
      - smoke_test