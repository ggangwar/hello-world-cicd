# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands:
  print_pipeline_id:
    parameters:
      id:
        default: "123"
        type: string
    steps:
      - run: echo "<<parameters.id>>" ${CIRCLE_WORKFLOW_ID}
jobs:
  print_hello_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo helloworld
  print_owner:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "printing project's owner"
          command: |
            echo $owner
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  print_pipeline_id_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
  handle_failure:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run:
          name: on error
          command: |
            echo "something failed"
          when: on_fail
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - print_hello_world
      - print_owner
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - print_pipeline_id_command
      - handle_failure
